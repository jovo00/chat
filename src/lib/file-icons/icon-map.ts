export const iconMap = {
  defaultFile: "file",
  defaultFolder: "folder",
  fileExtensions: {
    "60": "slint",
    htm: "html",
    xhtml: "html",
    html_vm: "html",
    asp: "html",
    jade: "pug",
    pug: "pug",
    md: "markdown",
    markdown: "markdown",
    rst: "markdown",
    blink: "blink",
    css: "css",
    scss: "sass",
    sass: "sass",
    less: "less",
    json: "json",
    jsonc: "json",
    tsbuildinfo: "json",
    json5: "json",
    jsonl: "json",
    ndjson: "json",
    hjson: "hjson",
    jinja: "jinja",
    jinja2: "jinja",
    j2: "jinja",
    "jinja-html": "jinja",
    proto: "proto",
    "sublime-project": "sublime",
    "sublime-workspace": "sublime",
    slx: "simulink",
    tw: "twine",
    twee: "twine",
    "yml.dist": "yaml",
    "yaml.dist": "yaml",
    "YAML-tmLanguage": "yaml",
    xml: "xml",
    plist: "xml",
    xsd: "xml",
    dtd: "xml",
    xsl: "xml",
    xslt: "xml",
    resx: "xml",
    iml: "xml",
    xquery: "xml",
    tmLanguage: "xml",
    manifest: "xml",
    project: "xml",
    "xml.dist": "xml",
    "xml.dist.sample": "xml",
    dmn: "xml",
    jrxml: "xml",
    xmp: "xml",
    toml: "toml",
    png: "image",
    jpeg: "image",
    jpg: "image",
    gif: "image",
    ico: "image",
    tif: "image",
    tiff: "image",
    ami: "image",
    apx: "image",
    avif: "image",
    bmp: "image",
    bpg: "image",
    brk: "image",
    cur: "image",
    dds: "image",
    exr: "image",
    fpx: "image",
    gbr: "image",
    img: "image",
    jbig2: "image",
    jb2: "image",
    jng: "image",
    jxr: "image",
    pgf: "image",
    pic: "image",
    raw: "image",
    webp: "image",
    eps: "image",
    afphoto: "image",
    ase: "image",
    aseprite: "image",
    clip: "image",
    cpt: "image",
    heif: "image",
    heic: "image",
    kra: "image",
    mdp: "image",
    ora: "image",
    pdn: "image",
    reb: "image",
    sai: "image",
    tga: "image",
    xcf: "image",
    jfif: "image",
    ppm: "image",
    pbm: "image",
    pgm: "image",
    pnm: "image",
    icns: "image",
    "3fr": "image",
    ari: "image",
    arw: "image",
    bay: "image",
    braw: "image",
    crw: "image",
    cr2: "image",
    cr3: "image",
    cap: "image",
    data: "image",
    dcs: "image",
    dcr: "image",
    dng: "image",
    drf: "image",
    eip: "image",
    erf: "image",
    fff: "image",
    gpr: "image",
    iiq: "image",
    k25: "image",
    kdc: "image",
    mdc: "image",
    mef: "image",
    mos: "image",
    mrw: "image",
    nef: "image",
    nrw: "image",
    obm: "image",
    orf: "image",
    pef: "image",
    ptx: "image",
    pxn: "image",
    r3d: "image",
    raf: "image",
    rwl: "image",
    rw2: "image",
    rwz: "image",
    sr2: "image",
    srf: "image",
    srw: "image",
    x3f: "image",
    pal: "palette",
    gpl: "palette",
    act: "palette",
    esx: "javascript",
    mjs: "javascript",
    jsx: "react",
    tsx: "qwik",
    "routing.ts": "routing",
    "routing.tsx": "routing",
    "routing.js": "routing",
    "routing.jsx": "routing",
    "route.ts": "routing",
    "route.tsx": "routing",
    "route.js": "routing",
    "route.jsx": "routing",
    "routes.ts": "routing",
    "routes.tsx": "routing",
    "routes.js": "routing",
    "routes.jsx": "routing",
    "action.js": "redux-action",
    "actions.js": "redux-action",
    "action.ts": "redux-action",
    "actions.ts": "ngrx-actions",
    "reducer.js": "redux-reducer",
    "reducers.js": "redux-reducer",
    "reducer.ts": "ngrx-reducer",
    "reducers.ts": "redux-reducer",
    "selector.js": "redux-selector",
    "selectors.js": "redux-selector",
    "selector.ts": "redux-selector",
    "selectors.ts": "ngrx-selectors",
    "store.js": "vuex-store",
    "store.ts": "vuex-store",
    ini: "settings",
    dlc: "settings",
    config: "settings",
    conf: "settings",
    properties: "settings",
    prop: "settings",
    settings: "settings",
    option: "settings",
    props: "settings",
    prefs: "settings",
    "sln.dotsettings": "settings",
    "sln.dotsettings.user": "settings",
    cfg: "settings",
    cnf: "settings",
    "tool-versions": "settings",
    "d.ts": "typescript-def",
    "d.cts": "typescript-def",
    "d.mts": "typescript-def",
    "d.ets": "typescript-def",
    mdoc: "markdoc",
    markdoc: "markdoc",
    "markdoc.md": "markdoc",
    marko: "markojs",
    astro: "astro",
    pdf: "pdf",
    xlsx: "table",
    xlsm: "table",
    xls: "table",
    csv: "table",
    tsv: "table",
    psv: "table",
    ods: "table",
    vscodeignore: "vscode",
    vsixmanifest: "vscode",
    vsix: "vscode",
    "code-workplace": "vscode",
    "code-workspace": "vscode",
    "code-profile": "vscode",
    "code-snippets": "vscode",
    csproj: "visualstudio",
    ruleset: "visualstudio",
    sln: "visualstudio",
    slnx: "visualstudio",
    suo: "visualstudio",
    vb: "visualstudio",
    vbs: "visualstudio",
    vcxitems: "visualstudio",
    "vcxitems.filters": "visualstudio",
    vcxproj: "visualstudio",
    "vcxproj.filters": "visualstudio",
    pdb: "database",
    sql: "database",
    pks: "database",
    pkb: "database",
    accdb: "database",
    mdb: "database",
    sqlite: "database",
    sqlite3: "database",
    pgsql: "database",
    postgres: "database",
    plpgsql: "database",
    psql: "database",
    db: "database",
    db3: "database",
    dblite: "database",
    dblite3: "database",
    debugsymbols: "database",
    odb: "database",
    kql: "kusto",
    cs: "csharp",
    csx: "csharp",
    csharp: "csharp",
    qs: "qsharp",
    zip: "zip",
    z: "zip",
    tar: "zip",
    gz: "zip",
    xz: "zip",
    lz: "zip",
    liz: "zip",
    lzma: "zip",
    lzma2: "zip",
    lz4: "zip",
    lz5: "zip",
    lzh: "zip",
    lha: "zip",
    br: "zip",
    bz2: "zip",
    bzip2: "zip",
    gzip: "zip",
    brotli: "zip",
    "7z": "zip",
    "001": "zip",
    rar: "zip",
    far: "zip",
    tz: "zip",
    taz: "zip",
    tlz: "zip",
    txz: "zip",
    tgz: "zip",
    tpz: "zip",
    tbz: "zip",
    tbz2: "zip",
    zst: "zip",
    zstd: "zip",
    tzst: "zip",
    tzstd: "zip",
    cab: "zip",
    cpio: "zip",
    rpm: "zip",
    deb: "zip",
    arj: "zip",
    wim: "zip",
    swm: "zip",
    esd: "zip",
    fat: "zip",
    xar: "zip",
    ntfs: "zip",
    hfs: "zip",
    squashfs: "zip",
    apfs: "zip",
    vala: "vala",
    zig: "zig",
    zon: "zig",
    exe: "exe",
    msi: "exe",
    dat: "hex",
    bin: "hex",
    hex: "hex",
    java: "java",
    jsp: "java",
    jar: "jar",
    class: "javaclass",
    c3: "c3",
    c: "c",
    i: "c",
    mi: "c",
    h: "h",
    cc: "cpp",
    cpp: "cpp",
    cxx: "cpp",
    "c++": "cpp",
    cp: "cpp",
    mii: "cpp",
    ii: "cpp",
    hh: "hpp",
    hpp: "hpp",
    hxx: "hpp",
    "h++": "hpp",
    hp: "hpp",
    tcc: "hpp",
    inl: "hpp",
    rc: "rc",
    go: "go",
    py: "python",
    pyc: "python-misc",
    whl: "python-misc",
    egg: "python-misc",
    url: "url",
    sh: "console",
    ksh: "console",
    csh: "console",
    tcsh: "console",
    zsh: "console",
    bash: "console",
    bat: "console",
    cmd: "console",
    awk: "console",
    fish: "console",
    exp: "console",
    nu: "console",
    xsh: "console",
    ps1: "powershell",
    psm1: "powershell",
    psd1: "powershell",
    ps1xml: "powershell",
    psc1: "powershell",
    pssc: "powershell",
    "excalidraw.json": "excalidraw",
    "excalidraw.svg": "excalidraw",
    "excalidraw.png": "excalidraw",
    gradle: "gradle",
    doc: "word",
    docx: "word",
    rtf: "word",
    odt: "word",
    cer: "certificate",
    cert: "certificate",
    crt: "certificate",
    pub: "key",
    key: "key",
    pem: "key",
    asc: "key",
    gpg: "key",
    passwd: "key",
    shasum: "key",
    sha256: "key",
    sha256sum: "key",
    sha256sums: "key",
    woff: "font",
    woff2: "font",
    ttf: "font",
    eot: "font",
    suit: "font",
    otf: "font",
    bmap: "font",
    fnt: "font",
    odttf: "font",
    ttc: "font",
    font: "font",
    fonts: "font",
    sui: "font",
    ntf: "font",
    mrf: "font",
    lib: "lib",
    a: "lib",
    bib: "bibliography",
    bst: "bibtex-style",
    dll: "dll",
    ilk: "dll",
    so: "dll",
    rb: "ruby",
    erb: "ruby",
    rbs: "ruby",
    fs: "fsharp",
    fsx: "fsharp",
    fsi: "fsharp",
    fsproj: "fsharp",
    swift: "swift",
    ino: "arduino",
    dockerignore: "docker",
    dockerfile: "docker",
    "docker-compose.yml": "docker",
    "docker-compose.yaml": "docker",
    containerignore: "docker",
    containerfile: "docker",
    "compose.yaml": "docker",
    "compose.yml": "docker",
    bbx: "bbx",
    cbx: "cbx",
    lbx: "lbx",
    tex: "tex",
    sty: "sty",
    ltx: "ltx",
    dtx: "dtx",
    pptx: "powerpoint",
    ppt: "powerpoint",
    pptm: "powerpoint",
    potx: "powerpoint",
    potm: "powerpoint",
    ppsx: "powerpoint",
    ppsm: "powerpoint",
    pps: "powerpoint",
    ppam: "powerpoint",
    ppa: "powerpoint",
    odp: "powerpoint",
    webm: "video",
    mkv: "video",
    flv: "video",
    vob: "video",
    ogv: "video",
    ogg: "video",
    gifv: "video",
    avi: "video",
    mov: "video",
    qt: "video",
    wmv: "video",
    yuv: "video",
    rm: "video",
    rmvb: "video",
    mp4: "video",
    m4v: "video",
    mpg: "video",
    mp2: "video",
    mpeg: "video",
    mpe: "video",
    mpv: "video",
    m2v: "video",
    vdi: "virtual",
    vbox: "virtual",
    "vbox-prev": "virtual",
    ved: "vedic",
    veda: "vedic",
    vedic: "vedic",
    edb: "email",
    eml: "email",
    emlx: "email",
    ics: "email",
    mbox: "email",
    msg: "email",
    oft: "email",
    olm: "email",
    ost: "email",
    p7s: "email",
    pst: "email",
    rpmsg: "email",
    tnef: "email",
    "8svx": "audio",
    aa: "audio",
    aac: "audio",
    aax: "audio",
    ac3: "audio",
    aif: "audio",
    aiff: "audio",
    alac: "audio",
    amr: "audio",
    ape: "audio",
    caf: "audio",
    cda: "audio",
    cdr: "audio",
    dss: "audio",
    ec3: "audio",
    efs: "audio",
    enc: "audio",
    flac: "audio",
    flp: "audio",
    gp: "audio",
    gsm: "audio",
    it: "audio",
    m3u: "audio",
    m3u8: "audio",
    m4a: "audio",
    m4b: "audio",
    m4p: "audio",
    m4r: "audio",
    mid: "audio",
    mka: "audio",
    mmf: "audio",
    mod: "audio",
    mp3: "audio",
    mpc: "audio",
    mscz: "audio",
    mtm: "audio",
    mui: "audio",
    musx: "audio",
    mxl: "audio",
    nsa: "audio",
    opus: "audio",
    pkf: "audio",
    qcp: "audio",
    ra: "audio",
    rf64: "audio",
    rip: "audio",
    sdt: "audio",
    sesx: "audio",
    sf2: "audio",
    stap: "audio",
    tg: "audio",
    voc: "audio",
    vqf: "audio",
    wav: "audio",
    weba: "audio",
    wfp: "audio",
    wma: "audio",
    wpl: "audio",
    wproj: "audio",
    wv: "audio",
    coffee: "coffee",
    cson: "coffee",
    iced: "coffee",
    txt: "document",
    lrc: "lyric",
    graphql: "graphql",
    gql: "graphql",
    rs: "rust",
    ron: "rust",
    raml: "raml",
    xaml: "xaml",
    hs: "haskell",
    lhs: "haskell",
    kt: "kotlin",
    kts: "kotlin",
    "mist.js": "mist",
    "mist.ts": "mist",
    "mist.jsx": "mist",
    "mist.tsx": "mist",
    otne: "otne",
    patch: "git",
    lua: "lua",
    clj: "clojure",
    cljs: "clojure",
    cljc: "clojure",
    groovy: "groovy",
    r: "r",
    rmd: "r",
    dart: "dart",
    "freezed.dart": "dart_generated",
    "g.dart": "dart_generated",
    as: "actionscript",
    mxml: "mxml",
    ahk: "autohotkey",
    swf: "flash",
    swc: "adobe-swc",
    swcrc: "swc",
    cmake: "cmake",
    asm: "assembly",
    a51: "assembly",
    inc: "assembly",
    nasm: "assembly",
    s: "assembly",
    ms: "assembly",
    agc: "assembly",
    ags: "assembly",
    aea: "assembly",
    argus: "assembly",
    mitigus: "assembly",
    binsource: "assembly",
    vue: "vue",
    ml: "ocaml",
    mli: "ocaml",
    cmx: "ocaml",
    odin: "odin",
    "js.map": "javascript-map",
    "mjs.map": "javascript-map",
    "cjs.map": "javascript-map",
    "css.map": "css-map",
    lock: "lock",
    hbs: "handlebars",
    mustache: "handlebars",
    pm: "perl",
    raku: "perl",
    hx: "haxe",
    "spec.ts": "test-ts",
    "spec.cts": "test-ts",
    "spec.mts": "test-ts",
    "cy.ts": "test-ts",
    "e2e-spec.ts": "test-ts",
    "e2e-spec.cts": "test-ts",
    "e2e-spec.mts": "test-ts",
    "test.ts": "test-ts",
    "test.cts": "test-ts",
    "test.mts": "test-ts",
    "ts.snap": "test-ts",
    "spec-d.ts": "test-ts",
    "test-d.ts": "test-ts",
    "spec.tsx": "test-jsx",
    "test.tsx": "test-jsx",
    "tsx.snap": "test-jsx",
    "spec.jsx": "test-jsx",
    "test.jsx": "test-jsx",
    "jsx.snap": "test-jsx",
    "cy.jsx": "test-jsx",
    "cy.tsx": "test-jsx",
    "spec-d.tsx": "test-jsx",
    "test-d.tsx": "test-jsx",
    "spec.js": "test-js",
    "spec.cjs": "test-js",
    "spec.mjs": "test-js",
    "e2e-spec.js": "test-js",
    "e2e-spec.cjs": "test-js",
    "e2e-spec.mjs": "test-js",
    "test.js": "test-js",
    "test.cjs": "test-js",
    "test.mjs": "test-js",
    "js.snap": "test-js",
    "cy.js": "test-js",
    "module.ts": "nest-module",
    "module.js": "nest-module",
    "ng-template": "angular",
    "component.ts": "angular-component",
    "component.js": "angular-component",
    "guard.ts": "nest-guard",
    "guard.js": "nest-guard",
    "service.ts": "nest-service",
    "service.js": "nest-service",
    "pipe.ts": "nest-pipe",
    "pipe.js": "nest-pipe",
    "filter.js": "nest-filter",
    "directive.ts": "angular-directive",
    "directive.js": "angular-directive",
    "resolver.ts": "nest-resolver",
    "resolver.js": "nest-resolver",
    "interceptor.ts": "nest-interceptor",
    "interceptor.js": "nest-interceptor",
    pp: "puppet",
    ex: "elixir",
    exs: "elixir",
    eex: "elixir",
    leex: "elixir",
    heex: "elixir",
    ls: "livescript",
    erl: "erlang",
    twig: "twig",
    jl: "julia",
    elm: "elm",
    pure: "purescript",
    purs: "purescript",
    tpl: "smarty",
    styl: "stylus",
    re: "reason",
    rei: "reason",
    cmj: "bucklescript",
    merlin: "merlin",
    vhd: "verilog",
    vhdx: "verilog",
    sv: "verilog",
    svh: "verilog",
    vhdl: "verilog",
    nb: "mathematica",
    wl: "wolframlanguage",
    wls: "wolframlanguage",
    njk: "nunjucks",
    nunjucks: "nunjucks",
    robot: "robot",
    sol: "solidity",
    au3: "autoit",
    haml: "haml",
    yang: "yang",
    mjml: "mjml",
    tf: "terraform",
    "tf.json": "terraform",
    tfvars: "terraform",
    tfstate: "terraform",
    tfbackend: "terraform",
    "blade.php": "laravel",
    "inky.php": "laravel",
    applescript: "applescript",
    ipa: "applescript",
    cake: "cake",
    feature: "cucumber",
    features: "cucumber",
    nim: "nim",
    nimble: "nim",
    apib: "apiblueprint",
    apiblueprint: "apiblueprint",
    riot: "riot",
    tag: "riot",
    vfl: "vfl",
    kl: "kl",
    pcss: "postcss",
    sss: "postcss",
    todo: "todo",
    cfml: "coldfusion",
    cfc: "coldfusion",
    lucee: "coldfusion",
    cfm: "coldfusion",
    cabal: "cabal",
    nix: "nix",
    slim: "slim",
    http: "http",
    rest: "http",
    rql: "restql",
    restql: "restql",
    kv: "kivy",
    graphcool: "graphcool",
    sbt: "sbt",
    apk: "android",
    smali: "android",
    dex: "android",
    env: "tune",
    "gitlab-ci.yml": "gitlab",
    jenkinsfile: "jenkins",
    jenkins: "jenkins",
    fig: "figma",
    huff: "huff",
    "rootReducer.ts": "ngrx-reducer",
    "state.ts": "ngrx-state",
    "effects.ts": "ngrx-effects",
    cr: "crystal",
    ecr: "crystal",
    "drone.yml": "drone",
    cu: "cuda",
    cuh: "cuda",
    log: "log",
    def: "dotjs",
    dot: "dotjs",
    jst: "dotjs",
    ejs: "ejs",
    ".wakatime-project": "wakatime",
    pde: "processing",
    "stories.js": "storybook",
    "stories.jsx": "storybook",
    "stories.mdx": "storybook",
    "story.js": "storybook",
    "story.jsx": "storybook",
    "stories.ts": "storybook",
    "stories.tsx": "storybook",
    "story.ts": "storybook",
    "story.tsx": "storybook",
    "stories.svelte": "storybook",
    "story.mdx": "storybook",
    wpy: "wepy",
    hcl: "hcl",
    san: "san",
    "quokka.js": "quokka",
    "quokka.ts": "quokka",
    "quokka.jsx": "quokka",
    "quokka.tsx": "quokka",
    djt: "django",
    red: "red",
    mk: "makefile",
    fxp: "foxpro",
    prg: "foxpro",
    pot: "i18n",
    po: "i18n",
    mo: "i18n",
    lang: "i18n",
    xlf: "i18n",
    wat: "webassembly",
    wasm: "webassembly",
    ipynb: "jupyter",
    d: "d",
    mdx: "mdx",
    svx: "mdsvex",
    bal: "ballerina",
    balx: "ballerina",
    rkt: "racket",
    bzl: "bazel",
    bazel: "bazel",
    mint: "mint",
    vm: "velocity",
    fhtml: "velocity",
    vtl: "velocity",
    gd: "godot",
    godot: "godot-assets",
    tres: "godot-assets",
    tscn: "godot-assets",
    gdns: "godot-assets",
    gdnlib: "godot-assets",
    gdshader: "godot-assets",
    gdshaderinc: "godot-assets",
    gdextension: "godot-assets",
    "azure-pipelines.yml": "azure-pipelines",
    "azure-pipelines.yaml": "azure-pipelines",
    "azure-pipelines-main.yml": "azure-pipelines",
    "azure-pipelines-main.yaml": "azure-pipelines",
    azcli: "azure",
    vagrantfile: "vagrant",
    prisma: "prisma",
    cshtml: "razor",
    vbhtml: "razor",
    abc: "abc",
    ad: "asciidoc",
    adoc: "asciidoc",
    asciidoc: "asciidoc",
    edge: "edge",
    ss: "scheme",
    scm: "scheme",
    lisp: "lisp",
    lsp: "lisp",
    cl: "lisp",
    fast: "lisp",
    stl: "3d",
    stp: "3d",
    obj: "3d",
    o: "3d",
    ac: "3d",
    blend: "3d",
    dxf: "3d",
    fbx: "3d",
    mesh: "3d",
    mqo: "3d",
    pmd: "3d",
    pmx: "3d",
    skp: "3d",
    vac: "3d",
    vdp: "3d",
    vox: "3d",
    gltf: "3d",
    glb: "3d",
    svg: "svg",
    ai: "adobe-illustrator",
    ait: "adobe-illustrator",
    psd: "adobe-photoshop",
    psb: "adobe-photoshop",
    psdt: "adobe-photoshop",
    svelte: "svelte",
    "svelte.js": "svelte_js",
    "svelte.ts": "svelte_ts",
    vimrc: "vim",
    gvimrc: "vim",
    exrc: "vim",
    vim: "vim",
    viminfo: "vim",
    "controller.ts": "controller",
    "controller.js": "controller",
    "middleware.ts": "nest-middleware",
    "middleware.js": "nest-middleware",
    "decorator.ts": "nest-decorator",
    "decorator.js": "nest-decorator",
    "filter.ts": "nest-filter",
    "gateway.ts": "nest-gateway",
    "gateway.js": "nest-gateway",
    moon: "moonscript",
    prw: "advpl",
    prx: "advpl",
    ptm: "advpl-ptm",
    tlpp: "advpl-tlpp",
    ch: "advpl-include",
    iso: "disc",
    vmdk: "disc",
    hdd: "disc",
    qcow: "disc",
    qcow2: "disc",
    qed: "disc",
    dmg: "disc",
    f: "fortran",
    f77: "fortran",
    f90: "fortran",
    f95: "fortran",
    f03: "fortran",
    f08: "fortran",
    tcl: "tcl",
    do: "tcl",
    liquid: "liquid",
    p: "prolog",
    pro: "prolog",
    pl: "prolog",
    coco: "coconut",
    sketch: "sketch",
    pwn: "pawn",
    amx: "pawn",
    "4th": "forth",
    fth: "forth",
    frt: "forth",
    iuml: "uml",
    pu: "uml",
    puml: "uml",
    plantuml: "uml",
    wsd: "uml",
    wrap: "meson",
    dhall: "dhall",
    dhallb: "dhall",
    sml: "sml",
    mlton: "sml",
    mlb: "sml",
    sig: "sml",
    fun: "sml",
    cm: "sml",
    lex: "sml",
    use: "sml",
    grm: "sml",
    opam: "opam",
    imba: "imba",
    drawio: "drawio",
    dio: "drawio",
    pas: "pascal",
    unity: "unity",
    unitypackage: "unity",
    sas: "sas",
    sas7bdat: "sas",
    sashdat: "sas",
    astore: "sas",
    ast: "sas",
    sast: "sas",
    nupkg: "nuget",
    command: "command",
    dsc: "denizenscript",
    "code-search": "search",
    nginx: "nginx",
    nginxconf: "nginx",
    nginxconfig: "nginx",
    mcfunction: "minecraft",
    mcmeta: "minecraft",
    mcr: "minecraft",
    mca: "minecraft",
    mcgame: "minecraft",
    mclevel: "minecraft",
    mcworld: "minecraft",
    mine: "minecraft",
    mus: "minecraft",
    mcstructure: "minecraft",
    mcpack: "minecraft",
    mcaddon: "minecraft",
    mctemplate: "minecraft",
    mcproject: "minecraft",
    res: "rescript",
    resi: "rescript-interface",
    duc: "duc",
    b: "brainfuck",
    bf: "brainfuck",
    bicep: "bicep",
    cob: "cobol",
    cbl: "cobol",
    gr: "grain",
    lol: "lolcode",
    idr: "idris",
    ibc: "idris",
    pipeline: "pipeline",
    rego: "opa",
    windi: "windicss",
    scala: "scala",
    sc: "scala",
    ly: "lilypond",
    v: "vlang",
    pgn: "chess",
    fen: "chess",
    gmi: "gemini",
    gemini: "gemini",
    "tsconfig.json": "tsconfig",
    tauri: "tauri",
    "jsconfig.json": "jsconfig",
    ada: "ada",
    adb: "ada",
    ads: "ada",
    ali: "ada",
    "horusec-config.json": "horusec",
    "pdm.lock": "pdm",
    "pdm.toml": "pdm",
    coarc: "coala",
    coafile: "coala",
    bubble: "dinophp",
    "html.bubble": "dinophp",
    "php.bubble": "dinophp",
    tl: "teal",
    template: "template",
    glsl: "shader",
    vert: "shader",
    tesc: "shader",
    tese: "shader",
    geom: "shader",
    frag: "shader",
    comp: "shader",
    "vert.glsl": "shader",
    "tesc.glsl": "shader",
    "tese.glsl": "shader",
    "geom.glsl": "shader",
    "frag.glsl": "shader",
    "comp.glsl": "shader",
    "vertex.glsl": "shader",
    "geometry.glsl": "shader",
    "fragment.glsl": "shader",
    "compute.glsl": "shader",
    "ts.glsl": "shader",
    "gs.glsl": "shader",
    "vs.glsl": "shader",
    "fs.glsl": "shader",
    shader: "shader",
    vertexshader: "shader",
    fragmentshader: "shader",
    geometryshader: "shader",
    computeshader: "shader",
    hlsl: "shader",
    "pixel.hlsl": "shader",
    "geometry.hlsl": "shader",
    "compute.hlsl": "shader",
    "tessellation.hlsl": "shader",
    "px.hlsl": "shader",
    "geom.hlsl": "shader",
    "comp.hlsl": "shader",
    "tess.hlsl": "shader",
    wgsl: "shader",
    sy: "siyuan",
    "ndst.yml": "ndst",
    "ndst.yaml": "ndst",
    "ndst.json": "ndst",
    tobi: "tobi",
    gleam: "gleam",
    "steadybit.yml": "steadybit",
    "steadybit.yaml": "steadybit",
    capnp: "capnp",
    tree: "tree",
    cdc: "cadence",
    "openapi.json": "openapi",
    "openapi.yml": "openapi",
    "openapi.yaml": "openapi",
    "swagger.json": "swagger",
    "swagger.yml": "swagger",
    "swagger.yaml": "swagger",
    g4: "antlr",
    "st.css": "stylable",
    pine: "pinejs",
    "taskfile.yml": "taskfile",
    "taskfile.yaml": "taskfile",
    gml: "gamemaker",
    yy: "gamemaker",
    yyp: "gamemaker",
    yyz: "gamemaker",
    tldr: "tldraw",
    typ: "typst",
    mmd: "mermaid",
    mermaid: "mermaid",
    mojo: "mojo",
    "🔥": "mojo",
    rbxl: "roblox",
    rbxlx: "roblox",
    rbxm: "roblox",
    rbxmx: "roblox",
    luau: "luau",
    "project.json": "rojo",
    "model.json": "rojo",
    "meta.json": "rojo",
    "rbxmk.lua": "rbxmk",
    "rbxmk.luau": "rbxmk",
    spwn: "spwn",
    templ: "templ",
    crx: "chrome",
    stan: "stan",
    abap: "abap",
    acds: "abap",
    asddls: "abap",
    lottie: "lottie",
    gs: "apps-script",
    "garden.yml": "garden",
    "garden.yaml": "garden",
    pkl: "pkl",
    k: "kcl",
    "sigstore.json": "verified",
    bru: "bruno",
    cairo: "cairo",
    alloy: "grafana-alloy",
    ftl: "freemarker",
    ц: "tsil",
    tape: "tape",
    hurl: "hurl",
    cds: "cds",
    slint: "slint",
    sw: "sway",
    zeabur: "zeabur",
    "bench.ts": "bench-ts",
    "bench.cts": "bench-ts",
    "bench.mts": "bench-ts",
    "bench.jsx": "bench-jsx",
    "bench.tsx": "bench-jsx",
    "bench.js": "bench-js",
    "bench.cjs": "bench-js",
    "bench.mjs": "bench-js",
    ".ncurc.json": "dependencies-update",
    ".ncurc.yml": "dependencies-update",
    ".ncurc.js": "dependencies-update",
    srt: "subtitles",
    ssa: "subtitles",
    ttml: "subtitles",
    sbv: "subtitles",
    dfxp: "subtitles",
    vtt: "subtitles",
    sub: "subtitles",
    ass: "subtitles",
    beancount: "beancount",
    bean: "beancount",
    epub: "epub",
    reg: "regedit",
    gnu: "gnuplot",
    smk: "snakemake",
    snakemake: "snakemake",
    cpn: "coloredpetrinets",
    pnml: "coloredpetrinets",
    pt: "pytorch",
    pth: "pytorch",
    pwf: "pytorch",
  },
  files: {
    ".pug-lintrc": "pug",
    ".pug-lintrc.js": "pug",
    ".pug-lintrc.json": "pug",
    justfile: "just",
    ".justfile": "just",
    ".jscsrc": "json",
    ".jshintrc": "json",
    "composer.lock": "json",
    ".jsbeautifyrc": "json",
    ".esformatter": "json",
    "cdp.pid": "json",
    ".lintstagedrc": "json",
    ".whitesource": "json",
    "playwright.config.js": "playwright",
    "playwright.config.mjs": "playwright",
    "playwright.config.ts": "playwright",
    "playwright.config.base.js": "playwright",
    "playwright.config.base.mjs": "playwright",
    "playwright.config.base.ts": "playwright",
    "playwright-ct.config.js": "playwright",
    "playwright-ct.config.mjs": "playwright",
    "playwright-ct.config.ts": "playwright",
    ".htaccess": "xml",
    ".release-it.json": "rocket",
    ".release-it.ts": "rocket",
    ".release-it.js": "rocket",
    ".release-it.cjs": "rocket",
    ".release-it.yaml": "rocket",
    ".release-it.yml": "rocket",
    ".release-it.toml": "rocket",
    "release.toml": "rocket",
    "release-plz.toml": "rocket",
    ".release-plz.toml": "rocket",
    "router.js": "routing",
    "router.jsx": "routing",
    "router.ts": "routing",
    "router.tsx": "routing",
    "route.js": "routing",
    "route.jsx": "routing",
    "route.ts": "routing",
    "route.tsx": "routing",
    "routes.js": "routing",
    "routes.jsx": "routing",
    "routes.ts": "routing",
    "routes.tsx": "routing",
    "action.js": "redux-action",
    "actions.js": "redux-action",
    "action.ts": "redux-action",
    "actions.ts": "redux-action",
    "reducer.js": "redux-reducer",
    "reducers.js": "redux-reducer",
    "reducer.ts": "redux-reducer",
    "reducers.ts": "redux-reducer",
    "selector.js": "redux-selector",
    "selectors.js": "redux-selector",
    "selector.ts": "redux-selector",
    "selectors.ts": "redux-selector",
    "store.js": "vuex-store",
    "store.ts": "vuex-store",
    ".jshintignore": "settings",
    ".buildignore": "settings",
    ".mrconfig": "settings",
    ".yardopts": "settings",
    "manifest.mf": "settings",
    ".clang-format": "settings",
    ".clang-format-ignore": "settings",
    ".clang-tidy": "settings",
    ".conf": "settings",
    "compile_flags.txt": "settings",
    "astro.config.js": "astro-config",
    "astro.config.mjs": "astro-config",
    "astro.config.cjs": "astro-config",
    "astro.config.ts": "astro-config",
    "astro.config.cts": "astro-config",
    "astro.config.mts": "astro-config",
    "go.mod": "go-mod",
    "go.sum": "go-mod",
    "go.work": "go-mod",
    "go.work.sum": "go-mod",
    "requirements.txt": "python-misc",
    pipfile: "python-misc",
    ".python-version": "python-misc",
    "manifest.in": "python-misc",
    pylintrc: "python-misc",
    ".pylintrc": "python-misc",
    "pyproject.toml": "python-misc",
    "py.typed": "python-misc",
    ".coveragerc": "python-misc",
    ".coverage": "python-misc",
    ".scrapy": "python-misc",
    "celerybeat-schedule": "python-misc",
    "celerybeat.pid": "python-misc",
    "ruff.toml": "ruff",
    ".ruff.toml": "ruff",
    "uv.toml": "uv",
    ".uv.toml": "uv",
    sconstruct: "scons",
    sconscript: "scons",
    scsub: "scons",
    "commit-msg": "console",
    "pre-commit": "console",
    "pre-push": "console",
    "post-merge": "console",
    "excalidraw.json": "excalidraw",
    "excalidraw.svg": "excalidraw",
    "excalidraw.png": "excalidraw",
    "gradle.properties": "gradle",
    gradlew: "gradle",
    "gradle-wrapper.properties": "gradle",
    copying: "certificate",
    "copying.md": "certificate",
    "copying.rst": "certificate",
    "copying.txt": "certificate",
    copyright: "certificate",
    "copyright.md": "certificate",
    "copyright.rst": "certificate",
    "copyright.txt": "certificate",
    license: "certificate",
    "license-agpl": "certificate",
    "license-apache": "certificate",
    "license-bsd": "certificate",
    "license-mit": "certificate",
    "license-gpl": "certificate",
    "license-lgpl": "certificate",
    "license.md": "certificate",
    "license.rst": "certificate",
    "license.txt": "certificate",
    licence: "certificate",
    "licence-agpl": "certificate",
    "licence-apache": "certificate",
    "licence-bsd": "certificate",
    "licence-mit": "certificate",
    "licence-gpl": "certificate",
    "licence-lgpl": "certificate",
    "licence.md": "certificate",
    "licence.rst": "certificate",
    "licence.txt": "certificate",
    unlicense: "certificate",
    "unlicense.txt": "certificate",
    ".htpasswd": "key",
    sha256sums: "key",
    ".secrets": "key",
    "keystatic.config.tsx": "keystatic",
    "keystatic.config.ts": "keystatic",
    "keystatic.config.jsx": "keystatic",
    "keystatic.config.js": "keystatic",
    ".ruby-version": "ruby",
    gemfile: "gemfile",
    ".rubocop.yml": "rubocop",
    ".rubocop-todo.yml": "rubocop",
    ".rubocop_todo.yml": "rubocop",
    ".rspec": "rspec",
    dockerfile: "docker",
    "dockerfile.prod": "docker",
    "dockerfile.production": "docker",
    "dockerfile.alpha": "docker",
    "dockerfile.beta": "docker",
    "dockerfile.stage": "docker",
    "dockerfile.staging": "docker",
    "dockerfile.dev": "docker",
    "dockerfile.development": "docker",
    "dockerfile.local": "docker",
    "dockerfile.test": "docker",
    "dockerfile.testing": "docker",
    "dockerfile.ci": "docker",
    "dockerfile.web": "docker",
    "dockerfile.windows": "docker",
    "dockerfile.worker": "docker",
    "docker-compose.yml": "docker",
    "docker-compose.override.yml": "docker",
    "docker-compose.prod.yml": "docker",
    "docker-compose.production.yml": "docker",
    "docker-compose.alpha.yml": "docker",
    "docker-compose.beta.yml": "docker",
    "docker-compose.stage.yml": "docker",
    "docker-compose.staging.yml": "docker",
    "docker-compose.dev.yml": "docker",
    "docker-compose.development.yml": "docker",
    "docker-compose.local.yml": "docker",
    "docker-compose.test.yml": "docker",
    "docker-compose.testing.yml": "docker",
    "docker-compose.ci.yml": "docker",
    "docker-compose.web.yml": "docker",
    "docker-compose.worker.yml": "docker",
    "docker-compose.yaml": "docker",
    "docker-compose.override.yaml": "docker",
    "docker-compose.prod.yaml": "docker",
    "docker-compose.production.yaml": "docker",
    "docker-compose.alpha.yaml": "docker",
    "docker-compose.beta.yaml": "docker",
    "docker-compose.stage.yaml": "docker",
    "docker-compose.staging.yaml": "docker",
    "docker-compose.dev.yaml": "docker",
    "docker-compose.development.yaml": "docker",
    "docker-compose.local.yaml": "docker",
    "docker-compose.test.yaml": "docker",
    "docker-compose.testing.yaml": "docker",
    "docker-compose.ci.yaml": "docker",
    "docker-compose.web.yaml": "docker",
    "docker-compose.worker.yaml": "docker",
    containerfile: "docker",
    "containerfile.prod": "docker",
    "containerfile.production": "docker",
    "containerfile.alpha": "docker",
    "containerfile.beta": "docker",
    "containerfile.stage": "docker",
    "containerfile.staging": "docker",
    "containerfile.dev": "docker",
    "containerfile.development": "docker",
    "containerfile.local": "docker",
    "containerfile.test": "docker",
    "containerfile.testing": "docker",
    "containerfile.ci": "docker",
    "containerfile.web": "docker",
    "containerfile.worker": "docker",
    "compose.yaml": "docker",
    "compose.override.yaml": "docker",
    "compose.prod.yaml": "docker",
    "compose.production.yaml": "docker",
    "compose.alpha.yaml": "docker",
    "compose.beta.yaml": "docker",
    "compose.stage.yaml": "docker",
    "compose.staging.yaml": "docker",
    "compose.dev.yaml": "docker",
    "compose.development.yaml": "docker",
    "compose.local.yaml": "docker",
    "compose.test.yaml": "docker",
    "compose.testing.yaml": "docker",
    "compose.ci.yaml": "docker",
    "compose.web.yaml": "docker",
    "compose.worker.yaml": "docker",
    "compose.yml": "docker",
    "compose.override.yml": "docker",
    "compose.prod.yml": "docker",
    "compose.production.yml": "docker",
    "compose.alpha.yml": "docker",
    "compose.beta.yml": "docker",
    "compose.stage.yml": "docker",
    "compose.staging.yml": "docker",
    "compose.dev.yml": "docker",
    "compose.development.yml": "docker",
    "compose.local.yml": "docker",
    "compose.test.yml": "docker",
    "compose.testing.yml": "docker",
    "compose.ci.yml": "docker",
    "compose.web.yml": "docker",
    "compose.worker.yml": "docker",
    ".mailmap": "email",
    ".graphqlconfig": "graphql",
    ".git": "git",
    ".gitignore": "git",
    ".gitmessage": "git",
    ".gitignore-global": "git",
    ".gitignore_global": "git",
    ".gitattributes": "git",
    ".gitattributes-global": "git",
    ".gitattributes_global": "git",
    ".gitconfig": "git",
    ".gitmodules": "git",
    ".gitkeep": "git",
    ".keep": "git",
    ".gitpreserve": "git",
    ".gitinclude": "git",
    ".git-blame-ignore": "git",
    ".git-blame-ignore-revs": "git",
    ".git-for-windows-updater": "git",
    "git-history": "git",
    ".luacheckrc": "lua",
    ".Rhistory": "r",
    ".pubignore": "dart",
    "cmakelists.txt": "cmake",
    "cmakecache.txt": "cmake",
    "semgrep.yml": "semgrep",
    ".semgrepignore": "semgrep",
    "vue.config.js": "vue-config",
    "vue.config.ts": "vue-config",
    "vetur.config.js": "vue-config",
    "vetur.config.ts": "vue-config",
    "volar.config.js": "vue-config",
    "nuxt.config.js": "nuxt",
    "nuxt.config.ts": "nuxt",
    ".nuxtignore": "nuxt",
    ".nuxtrc": "nuxt",
    "harmonix.config.js": "harmonix",
    "harmonix.config.ts": "harmonix",
    "security.md": "lock",
    "security.txt": "lock",
    security: "lock",
    "angular-cli.json": "angular",
    ".angular-cli.json": "angular",
    "angular.json": "angular",
    "ng-package.json": "angular",
    ".mjmlconfig": "mjml",
    "vercel.json": "vercel",
    ".vercelignore": "vercel",
    "now.json": "vercel",
    ".nowignore": "vercel",
    "liara.json": "liara",
    ".liaraignore": "liara",
    "verdaccio.yml": "verdaccio",
    "payload.config.js": "payload",
    "payload.config.mjs": "payload",
    "payload.config.ts": "payload",
    "payload.config.mts": "payload",
    "next.config.js": "next",
    "next.config.mjs": "next",
    "next.config.ts": "next",
    "next.config.mts": "next",
    ".remarkrc": "remark",
    ".remarkrc.cjs": "remark",
    ".remarkrc.js": "remark",
    ".remarkrc.json": "remark",
    ".remarkrc.mjs": "remark",
    ".remarkrc.yaml": "remark",
    ".remarkrc.yml": "remark",
    ".remarkignore": "remark",
    "remix.config.js": "remix",
    "remix.config.ts": "remix",
    artisan: "laravel",
    ".vfl": "vfl",
    ".kl": "kl",
    "todo.md": "todo",
    "todos.md": "todo",
    "cabal.project": "cabal",
    "cabal.project.freeze": "cabal",
    "cabal.project.local": "cabal",
    CNAME: "http",
    "project.graphcool": "graphcool",
    "webpack.config.coffee": "webpack",
    "ionic.config.json": "ionic",
    ".io-config.json": "ionic",
    "gulpfile.js": "gulp",
    "gulpfile.mjs": "gulp",
    "gulpfile.ts": "gulp",
    "gulpfile.cts": "gulp",
    "gulpfile.mts": "gulp",
    "gulpfile.babel.js": "gulp",
    "package.json": "nodejs",
    "package-lock.json": "nodejs",
    ".nvmrc": "nodejs",
    ".esmrc": "nodejs",
    ".node-version": "nodejs",
    ".npmignore": "npm",
    ".npmrc": "npm",
    ".yarnrc": "yarn",
    "yarn.lock": "yarn",
    ".yarnclean": "yarn",
    ".yarn-integrity": "yarn",
    "yarn-error.log": "yarn",
    ".yarnrc.yml": "yarn",
    ".yarnrc.yaml": "yarn",
    "androidmanifest.xml": "android",
    ".env.defaults": "tune",
    ".env.example": "tune",
    ".env.sample": "tune",
    ".env.template": "tune",
    ".env.schema": "tune",
    ".env.local": "tune",
    ".env.dev": "tune",
    ".env.development": "tune",
    ".env.alpha": "tune",
    ".env.e2e": "tune",
    ".env.qa": "tune",
    ".env.dist": "tune",
    ".env.prod": "tune",
    ".env.production": "tune",
    ".env.stg": "tune",
    ".env.stage": "tune",
    ".env.staging": "tune",
    ".env.preview": "tune",
    ".env.test": "tune",
    ".env.testing": "tune",
    ".env.dev.local": "tune",
    ".env.development.local": "tune",
    ".env.qa.local": "tune",
    ".env.prod.local": "tune",
    ".env.production.local": "tune",
    ".env.stg.local": "tune",
    ".env.staging.local": "tune",
    ".env.test.local": "tune",
    ".env.uat": "tune",
    ".vars": "tune",
    ".dev.vars": "tune",
    "turbo.json": "turborepo",
    "turbo.jsonc": "turborepo",
    "babel-transform.js": "babel",
    "blitz.config.js": "blitz",
    "blitz.config.ts": "blitz",
    ".blitz.config.compiled.js": "blitz",
    "contributing.md": "contributing",
    "contributing.rst": "contributing",
    "contributing.txt": "contributing",
    contributing: "contributing",
    "readme.md": "readme",
    "readme.rst": "readme",
    "readme.txt": "readme",
    readme: "readme",
    changelog: "changelog",
    "changelog.md": "changelog",
    "changelog.rst": "changelog",
    "changelog.txt": "changelog",
    changes: "changelog",
    "changes.md": "changelog",
    "changes.rst": "changelog",
    "changes.txt": "changelog",
    "architecture.md": "architecture",
    "architecture.rst": "architecture",
    "architecture.txt": "architecture",
    architecture: "architecture",
    "credits.md": "credits",
    "credits.rst": "credits",
    "credits.txt": "credits",
    credits: "credits",
    "authors.md": "authors",
    "authors.rst": "authors",
    "authors.txt": "authors",
    authors: "authors",
    "contributors.md": "authors",
    "contributors.rst": "authors",
    "contributors.txt": "authors",
    contributors: "authors",
    ".flowconfig": "flow",
    "favicon.ico": "favicon",
    "karma.conf.js": "karma",
    "karma.conf.ts": "karma",
    "karma.conf.coffee": "karma",
    "karma.config.js": "karma",
    "karma.config.ts": "karma",
    "karma-main.js": "karma",
    "karma-main.ts": "karma",
    ".bithoundrc": "bithound",
    "svgo.config.js": "svgo",
    "svgo.config.cjs": "svgo",
    "svgo.config.mjs": "svgo",
    ".appveyor.yml": "appveyor",
    "appveyor.yml": "appveyor",
    ".travis.yml": "travis",
    ".codecov.yml": "codecov",
    "codecov.yml": "codecov",
    ".codecov.yaml": "codecov",
    "codecov.yaml": "codecov",
    "sonar-project.properties": "sonarcloud",
    ".sonarcloud.properties": "sonarcloud",
    "sonarcloud.yaml": "sonarcloud",
    "SonarQube.Analysis.xml": "sonarcloud",
    "protractor.conf.js": "protractor",
    "protractor.conf.ts": "protractor",
    "protractor.conf.coffee": "protractor",
    "protractor.config.js": "protractor",
    "protractor.config.ts": "protractor",
    "fuse.js": "fusebox",
    procfile: "heroku",
    "procfile.windows": "heroku",
    ".editorconfig": "editorconfig",
    ".editorconfig-checker.json": "editorconfig",
    ".ecrc": "editorconfig",
    ".bowerrc": "bower",
    "bower.json": "bower",
    ".eslintrc-md.js": "eslint",
    ".eslintrc-jsdoc.js": "eslint",
    ".eslintrc.base.json": "eslint",
    ".eslintignore": "eslint",
    ".eslintcache": "eslint",
    "code_of_conduct.md": "conduct",
    "code_of_conduct.txt": "conduct",
    code_of_conduct: "conduct",
    ".watchmanconfig": "watchman",
    "aurelia.json": "aurelia",
    ".autorc": "auto",
    "auto.config.js": "auto",
    "auto.config.ts": "auto",
    "auto-config.json": "auto",
    "auto-config.yaml": "auto",
    "auto-config.yml": "auto",
    "auto-config.ts": "auto",
    "auto-config.js": "auto",
    "mocha.opts": "mocha",
    ".mocharc.yml": "mocha",
    ".mocharc.yaml": "mocha",
    ".mocharc.js": "mocha",
    ".mocharc.json": "mocha",
    ".mocharc.jsonc": "mocha",
    jenkinsfile: "jenkins",
    "firebase.json": "firebase",
    ".firebaserc": "firebase",
    "firestore.rules": "firebase",
    "firestore.indexes.json": "firebase",
    "rollup.config.js": "rollup",
    "rollup.config.mjs": "rollup",
    "rollup.config.ts": "rollup",
    "rollup-config.js": "rollup",
    "rollup-config.mjs": "rollup",
    "rollup-config.ts": "rollup",
    "rollup.config.common.js": "rollup",
    "rollup.config.common.mjs": "rollup",
    "rollup.config.common.ts": "rollup",
    "rollup.config.base.js": "rollup",
    "rollup.config.base.mjs": "rollup",
    "rollup.config.base.ts": "rollup",
    "rollup.config.prod.js": "rollup",
    "rollup.config.prod.mjs": "rollup",
    "rollup.config.prod.ts": "rollup",
    "rollup.config.dev.js": "rollup",
    "rollup.config.dev.mjs": "rollup",
    "rollup.config.dev.ts": "rollup",
    "rollup.config.prod.vendor.js": "rollup",
    "rollup.config.prod.vendor.mjs": "rollup",
    "rollup.config.prod.vendor.ts": "rollup",
    ".hhconfig": "hack",
    "hardhat.config.js": "hardhat",
    "hardhat.config.ts": "hardhat",
    ".stylelintignore": "stylelint",
    ".stylelintcache": "stylelint",
    ".codeclimate.yml": "code-climate",
    ".prettierignore": "prettier",
    ".renovaterc": "renovate",
    ".renovaterc.json": "renovate",
    "renovate-config.json": "renovate",
    "renovate.json": "renovate",
    "renovate.json5": "renovate",
    "apollo.config.js": "apollo",
    "nodemon.json": "nodemon",
    "nodemon-debug.json": "nodemon",
    ".entity": "ngrx-entity",
    ".hintrc": "webhint",
    browserslist: "browserlist",
    ".browserslistrc": "browserlist",
    ".snyk": "snyk",
    ".drone.yml": "drone",
    ".sequelizerc": "sequelize",
    "gatsby-config.js": "gatsby",
    "gatsby-config.mjs": "gatsby",
    "gatsby-config.ts": "gatsby",
    "gatsby-node.js": "gatsby",
    "gatsby-node.mjs": "gatsby",
    "gatsby-node.ts": "gatsby",
    "gatsby-browser.js": "gatsby",
    "gatsby-browser.tsx": "gatsby",
    "gatsby-ssr.js": "gatsby",
    "gatsby-ssr.tsx": "gatsby",
    ".wakatime-project": "wakatime",
    "circle.yml": "circleci",
    ".cfignore": "cloudfoundry",
    "gruntfile.js": "grunt",
    "gruntfile.ts": "grunt",
    "gruntfile.cjs": "grunt",
    "gruntfile.cts": "grunt",
    "gruntfile.coffee": "grunt",
    "gruntfile.babel.js": "grunt",
    "gruntfile.babel.ts": "grunt",
    "gruntfile.babel.coffee": "grunt",
    "jest.config.js": "jest",
    "jest.config.cjs": "jest",
    "jest.config.mjs": "jest",
    "jest.config.ts": "jest",
    "jest.config.cts": "jest",
    "jest.config.mts": "jest",
    "jest.config.json": "jest",
    "jest.e2e.config.js": "jest",
    "jest.e2e.config.cjs": "jest",
    "jest.e2e.config.mjs": "jest",
    "jest.e2e.config.ts": "jest",
    "jest.e2e.config.cts": "jest",
    "jest.e2e.config.mts": "jest",
    "jest.e2e.config.json": "jest",
    "jest.e2e.json": "jest",
    "jest-unit.config.js": "jest",
    "jest-e2e.config.js": "jest",
    "jest-e2e.config.cjs": "jest",
    "jest-e2e.config.mjs": "jest",
    "jest-e2e.config.ts": "jest",
    "jest-e2e.config.cts": "jest",
    "jest-e2e.config.mts": "jest",
    "jest-e2e.config.json": "jest",
    "jest-e2e.json": "jest",
    "jest-github-actions-reporter.js": "jest",
    "jest.setup.js": "jest",
    "jest.setup.ts": "jest",
    "jest.json": "jest",
    ".jestrc": "jest",
    ".jestrc.js": "jest",
    ".jestrc.json": "jest",
    "jest.teardown.js": "jest",
    "jest-preset.json": "jest",
    "jest-preset.js": "jest",
    "jest-preset.cjs": "jest",
    "jest-preset.mjs": "jest",
    "jest.preset.js": "jest",
    "jest.preset.mjs": "jest",
    "jest.preset.cjs": "jest",
    "jest.preset.json": "jest",
    fastfile: "fastlane",
    appfile: "fastlane",
    ".helmignore": "helm",
    "wallaby.js": "wallaby",
    "wallaby.conf.js": "wallaby",
    "stencil.config.js": "stencil",
    "stencil.config.ts": "stencil",
    makefile: "makefile",
    gnumakefile: "makefile",
    kbuild: "makefile",
    "bitbucket-pipelines.yaml": "bitbucket",
    "bitbucket-pipelines.yml": "bitbucket",
    ".bazelignore": "bazel",
    ".bazelrc": "bazel",
    ".bazelversion": "bazel",
    ".gdignore": "godot-assets",
    "._sc_": "godot-assets",
    _sc_: "godot-assets",
    "azure-pipelines.yml": "azure-pipelines",
    "azure-pipelines.yaml": "azure-pipelines",
    "azure-pipelines-main.yml": "azure-pipelines",
    "azure-pipelines-main.yaml": "azure-pipelines",
    vagrantfile: "vagrant",
    "prisma.yml": "prisma",
    "prisma.config.ts": "prisma",
    ".nycrc": "istanbul",
    ".nycrc.json": "istanbul",
    ".nycrc.yaml": "istanbul",
    ".nycrc.yml": "istanbul",
    "nyc.config.js": "istanbul",
    ".istanbul.yml": "istanbul",
    "tailwind.js": "tailwindcss",
    "tailwind.ts": "tailwindcss",
    "tailwind.config.js": "tailwindcss",
    "tailwind.config.cjs": "tailwindcss",
    "tailwind.config.mjs": "tailwindcss",
    "tailwind.config.ts": "tailwindcss",
    "tailwind.config.cts": "tailwindcss",
    "tailwind.config.mts": "tailwindcss",
    "buildkite.yml": "buildkite",
    "buildkite.yaml": "buildkite",
    "netlify.json": "netlify",
    "netlify.yml": "netlify",
    "netlify.yaml": "netlify",
    "netlify.toml": "netlify",
    "nest-cli.json": "nest",
    ".nest-cli.json": "nest",
    "nestconfig.json": "nest",
    ".nestconfig.json": "nest",
    "moon.yml": "moon",
    ".percy.yml": "percy",
    ".gitpod.yml": "gitpod",
    ".stackblitzrc": "stackblitz",
    codeowners: "codeowners",
    OWNERS: "codeowners",
    ".gcloudignore": "gcp",
    "amplify.yml": "amplify",
    tiltfile: "tilt",
    "capacitor.config.json": "capacitor",
    "capacitor.config.ts": "capacitor",
    ".adonisrc.json": "adonis",
    ace: "adonis",
    "meson.build": "meson",
    "meson_options.txt": "meson",
    ".czrc": "commitizen",
    ".cz.json": "commitizen",
    ".cz.toml": "commitizen",
    ".cz.yaml": "commitizen",
    ".cz.yml": "commitizen",
    "cz.json": "commitizen",
    "cz.toml": "commitizen",
    "cz.yaml": "commitizen",
    "cz.yml": "commitizen",
    ".commitlint.yaml": "commitlint",
    ".commitlint.yml": "commitlint",
    ".buckconfig": "buck",
    "nx.json": "nx",
    ".nxignore": "nx",
    dune: "dune",
    "dune-project": "dune",
    "dune-workspace": "dune",
    "dune-workspace.dev": "dune",
    "roadmap.md": "roadmap",
    "roadmap.txt": "roadmap",
    "timeline.md": "roadmap",
    "timeline.txt": "roadmap",
    "milestones.md": "roadmap",
    "milestones.txt": "roadmap",
    "nuget.config": "nuget",
    ".nuspec": "nuget",
    "nuget.exe": "nuget",
    "stryker.conf.json": "stryker",
    "stryker.conf.js": "stryker",
    "stryker.conf.cjs": "stryker",
    "stryker.conf.mjs": "stryker",
    ".stryker.conf.json": "stryker",
    ".stryker.conf.js": "stryker",
    ".stryker.conf.cjs": "stryker",
    ".stryker.conf.mjs": "stryker",
    "stryker.config.json": "stryker",
    "stryker.config.js": "stryker",
    "stryker.config.mjs": "stryker",
    "stryker.config.cjs": "stryker",
    ".stryker.config.json": "stryker",
    ".stryker.config.js": "stryker",
    ".stryker.config.mjs": "stryker",
    ".stryker.config.cjs": "stryker",
    ".modernizrrc": "modernizr",
    ".modernizrrc.js": "modernizr",
    ".modernizrrc.json": "modernizr",
    ".slugignore": "slug",
    "stitches.config.js": "stitches",
    "stitches.config.ts": "stitches",
    "nginx.conf": "nginx",
    ".mcattributes": "minecraft",
    ".mcdefinitions": "minecraft",
    ".mcignore": "minecraft",
    ".replit": "replit",
    "duc.fbs": "duc",
    "snowpack.config.js": "snowpack",
    "snowpack.config.cjs": "snowpack",
    "snowpack.config.mjs": "snowpack",
    "snowpack.config.ts": "snowpack",
    "snowpack.config.cts": "snowpack",
    "snowpack.config.mts": "snowpack",
    "snowpack.deps.json": "snowpack",
    "snowpack.config.json": "snowpack",
    "quasar.conf.js": "quasar",
    "quasar.config.js": "quasar",
    "quasar.conf.ts": "quasar",
    "quasar.config.ts": "quasar",
    "quasar.config.cjs": "quasar",
    "dependabot.yml": "dependabot",
    "dependabot.yaml": "dependabot",
    "lerna.json": "lerna",
    "windi.config.js": "windicss",
    "windi.config.cjs": "windicss",
    "windi.config.ts": "windicss",
    "windi.config.cts": "windicss",
    "windi.config.json": "windicss",
    ".textlintrc": "textlint",
    ".textlintrc.js": "textlint",
    ".textlintrc.cjs": "textlint",
    ".textlintrc.json": "textlint",
    ".textlintrc.yml": "textlint",
    ".textlintrc.yaml": "textlint",
    ".textlintignore": "textlint",
    "vpkg.json": "vlang",
    "v.mod": "vlang",
    ".sentryclirc": "sentry",
    ".phpunit.result.cache": "phpunit",
    ".phpunit-watcher.yml": "phpunit",
    "phpunit.xml": "phpunit",
    "phpunit.xml.dist": "phpunit",
    "phpunit-watcher.yml": "phpunit",
    "phpunit-watcher.yml.dist": "phpunit",
    ".php_cs": "php-cs-fixer",
    ".php_cs.dist": "php-cs-fixer",
    ".php_cs.php": "php-cs-fixer",
    ".php_cs.dist.php": "php-cs-fixer",
    ".php-cs-fixer.php": "php-cs-fixer",
    ".php-cs-fixer.dist.php": "php-cs-fixer",
    "robots.txt": "robots",
    "tsconfig.json": "tsconfig",
    "tsconfig.app.json": "tsconfig",
    "tsconfig.editor.json": "tsconfig",
    "tsconfig.spec.json": "tsconfig",
    "tsconfig.base.json": "tsconfig",
    "tsconfig.build.json": "tsconfig",
    "tsconfig.eslint.json": "tsconfig",
    "tsconfig.lib.json": "tsconfig",
    "tsconfig.lib.prod.json": "tsconfig",
    "tsconfig.node.json": "tsconfig",
    "tsconfig.test.json": "tsconfig",
    "tsconfig.e2e.json": "tsconfig",
    "tsconfig.web.json": "tsconfig",
    "tsconfig.webworker.json": "tsconfig",
    "tsconfig.worker.json": "tsconfig",
    "tsconfig.config.json": "tsconfig",
    "tsconfig.vitest.json": "tsconfig",
    "tsconfig.cjs.json": "tsconfig",
    "tsconfig.esm.json": "tsconfig",
    "tsconfig.mjs.json": "tsconfig",
    "tsconfig.doc.json": "tsconfig",
    "tsconfig.paths.json": "tsconfig",
    "tsconfig.main.json": "tsconfig",
    "tsconfig.renderer.json": "tsconfig",
    "tsconfig.server.json": "tsconfig",
    "tsconfig.client.json": "tsconfig",
    "tsconfig.declaration.json": "tsconfig",
    "tauri.conf.json": "tauri",
    "tauri.config.json": "tauri",
    "tauri.linux.conf.json": "tauri",
    "tauri.windows.conf.json": "tauri",
    "tauri.macos.conf.json": "tauri",
    ".taurignore": "tauri",
    "jsconfig.json": "jsconfig",
    "maven.config": "maven",
    "jvm.config": "maven",
    "pom.xml": "maven",
    "serverless.yml": "serverless",
    "serverless.yaml": "serverless",
    "serverless.json": "serverless",
    "serverless.js": "serverless",
    "serverless.ts": "serverless",
    "supabase.js": "supabase",
    "supabase.ts": "supabase",
    "supabase.py": "supabase",
    ".ember-cli": "ember",
    ".ember-cli.js": "ember",
    "ember-cli-builds.js": "ember",
    "horusec-config.json": "horusec",
    "poetry.lock": "poetry",
    "pdm.lock": "pdm",
    "pdm.toml": "pdm",
    ".pdm-python": "pdm",
    ".parcelrc": "parcel",
    ".astylerc": "astyle",
    ".lighthouserc.js": "lighthouse",
    "lighthouserc.js": "lighthouse",
    ".lighthouserc.cjs": "lighthouse",
    "lighthouserc.cjs": "lighthouse",
    ".lighthouserc.json": "lighthouse",
    "lighthouserc.json": "lighthouse",
    ".lighthouserc.yml": "lighthouse",
    "lighthouserc.yml": "lighthouse",
    ".lighthouserc.yaml": "lighthouse",
    "lighthouserc.yaml": "lighthouse",
    "rome.json": "rome",
    "cypress.json": "cypress",
    "cypress.env.json": "cypress",
    "plopfile.js": "plop",
    "plopfile.cjs": "plop",
    "plopfile.mjs": "plop",
    "plopfile.ts": "plop",
    ".tobimake": "tobimake",
    "gleam.toml": "gleam",
    "pnpm-lock.yaml": "pnpm",
    "pnpm-workspace.yaml": "pnpm",
    ".pnpmfile.cjs": "pnpm",
    "gridsome.config.js": "gridsome",
    "gridsome.server.js": "gridsome",
    ".steadybit.yml": "steadybit",
    "steadybit.yml": "steadybit",
    ".steadybit.yaml": "steadybit",
    "steadybit.yaml": "steadybit",
    Caddyfile: "caddy",
    "openapi.json": "openapi",
    "openapi.yml": "openapi",
    "openapi.yaml": "openapi",
    "swagger.json": "swagger",
    "swagger.yml": "swagger",
    "swagger.yaml": "swagger",
    "bun.lockb": "bun",
    "bunfig.toml": "bun",
    ".bun-version": "bun",
    "bun.lock": "bun",
    ".nano-staged.js": "nano-staged",
    "nano-staged.js": "nano-staged",
    ".nano-staged.cjs": "nano-staged",
    "nano-staged.cjs": "nano-staged",
    ".nano-staged.mjs": "nano-staged",
    "nano-staged.mjs": "nano-staged",
    ".nano-staged.json": "nano-staged",
    "nano-staged.json": "nano-staged",
    ".nanostagedrc": "nano-staged",
    "knip.json": "knip",
    "knip.jsonc": "knip",
    ".knip.json": "knip",
    ".knip.jsonc": "knip",
    "knip.ts": "knip",
    "knip.js": "knip",
    "knip.config.ts": "knip",
    "knip.config.js": "knip",
    "taskfile.yml": "taskfile",
    "taskfile.yaml": "taskfile",
    "taskfile.dist.yml": "taskfile",
    "taskfile.dist.yaml": "taskfile",
    ".taskrc.yml": "taskfile",
    ".taskrc.yaml": "taskfile",
    ".hg": "mercurial",
    ".hgignore": "mercurial",
    ".hgflow": "mercurial",
    ".hgtags": "mercurial",
    ".hgrc": "mercurial",
    hgrc: "mercurial",
    "mercurial.ini": "mercurial",
    "deno.json": "deno",
    "deno.jsonc": "deno",
    "deno.lock": "deno",
    "plastic.branchexplorer": "plastic",
    "plastic.selector": "plastic",
    "plastic.wktree": "plastic",
    "plastic.workspace": "plastic",
    "plastic.workspaces": "plastic",
    "typst.toml": "typst",
    "uno.config.js": "unocss",
    "uno.config.mjs": "unocss",
    "uno.config.ts": "unocss",
    "uno.config.mts": "unocss",
    "unocss.config.js": "unocss",
    "unocss.config.mjs": "unocss",
    "unocss.config.ts": "unocss",
    "unocss.config.mts": "unocss",
    ".mincloudrc": "ifanr-cloud",
    "concourse.yml": "concourse",
    "werf.yaml": "werf",
    "werf.yml": "werf",
    "werf-giterminism.yaml": "werf",
    "werf-giterminism.yml": "werf",
    ".luaurc": "luau",
    "wally.toml": "wally",
    "biome.json": "biome",
    "biome.jsonc": "biome",
    "drizzle.config.ts": "drizzle",
    "drizzle.config.js": "drizzle",
    "drizzle.config.json": "drizzle",
    "garden.yml": "garden",
    "garden.yaml": "garden",
    "project.garden.yml": "garden",
    "project.garden.yaml": "garden",
    ".gardenignore": "garden",
    PklProject: "pkl",
    "PklProject.deps.json": "pkl",
    "k8s.yml": "kubernetes",
    "k8s.yaml": "kubernetes",
    "kubernetes.yml": "kubernetes",
    "kubernetes.yaml": "kubernetes",
    ".k8s.yml": "kubernetes",
    ".k8s.yaml": "kubernetes",
    "phpstan.neon": "phpstan",
    "phpneon.neon.dist": "phpstan",
    "screwdriver.yaml": "screwdriver",
    "screwdriver.yml": "screwdriver",
    "snapcraft.yaml": "snapcraft",
    "snapcraft.yml": "snapcraft",
    ".devcontainer/devcontainer.json": "container",
    ".devcontainer/devcontainer-lock.json": "container",
    "kcl.mod": "kcl",
    "kcl.yaml": "kcl",
    "kcl.yml": "kcl",
    ".clangd": "clangd",
    ".markdownlint.json": "markdownlint",
    ".markdownlint.jsonc": "markdownlint",
    ".markdownlint.yaml": "markdownlint",
    ".markdownlint.yml": "markdownlint",
    ".markdownlint-cli2.jsonc": "markdownlint",
    ".markdownlint-cli2.yaml": "markdownlint",
    ".markdownlint-cli2.cjs": "markdownlint",
    ".markdownlint-cli2.mjs": "markdownlint",
    ".markdownlintignore": "markdownlint",
    ".deepsource.toml": "deepsource",
    "jsr.json": "jsr",
    "jsr.jsonc": "jsr",
    ".coderabbit.yml": "coderabbit-ai",
    ".coderabbit.yaml": "coderabbit-ai",
    ".aiexclude": "gemini-ai",
    ".tazerc": "taze",
    ".tazerc.json": "taze",
    ".lefthook-local.json": "lefthook",
    ".lefthook-local.toml": "lefthook",
    ".lefthook-local.yaml": "lefthook",
    ".lefthook-local.yml": "lefthook",
    ".lefthook.json": "lefthook",
    ".lefthook.toml": "lefthook",
    ".lefthook.yaml": "lefthook",
    ".lefthook.yml": "lefthook",
    ".lefthookrc": "lefthook",
    "lefthook-local.json": "lefthook",
    "lefthook-local.toml": "lefthook",
    "lefthook-local.yaml": "lefthook",
    "lefthook-local.yml": "lefthook",
    "lefthook.json": "lefthook",
    "lefthook.toml": "lefthook",
    "lefthook.yaml": "lefthook",
    "lefthook.yml": "lefthook",
    lefthookrc: "lefthook",
    ".github/labeler.yml": "label",
    ".github/labeler.yaml": "label",
    ".github/copilot-instructions.md": "copilot",
    ".pre-commit-config.yaml": "pre-commit",
    ".pre-commit-hooks.yaml": "pre-commit",
    install: "installation",
    installation: "installation",
    ".github/FUNDING.yml": "github-sponsors",
    "fabric.mod.json": "minecraft-fabric",
    hosts: "hosts",
    "citation.cff": "citation",
    "xmake.lua": "xmake",
    xmake: "xmake",
    "wrangler.toml": "wrangler",
    "wrangler.json": "wrangler",
    "wrangler.jsonc": "wrangler",
    ".clinerules": "cline",
    ".packshiprc": "packship",
    ".packshiprc.json": "packship",
    ".packshiprc.js": "packship",
    ".packshiprc.ts": "packship",
    "packship.config.js": "packship",
    "packship.config.ts": "packship",
    "packship.config.mjs": "packship",
    "packship.config.mts": "packship",
    "packship.config.json": "packship",
    Snakefile: "snakemake",
  },
  folders: {
    rust: "folder-rust",
    bot: "folder-robot",
    bots: "folder-robot",
    robot: "folder-robot",
    robots: "folder-robot",
    src: "folder-src",
    srcs: "folder-src",
    source: "folder-src",
    sources: "folder-src",
    code: "folder-src",
    dist: "folder-dist",
    out: "folder-dist",
    output: "folder-dist",
    build: "folder-dist",
    builds: "folder-dist",
    release: "folder-dist",
    bin: "folder-dist",
    distribution: "folder-dist",
    css: "folder-css",
    stylesheet: "folder-css",
    stylesheets: "folder-css",
    style: "folder-css",
    styles: "folder-css",
    sass: "folder-sass",
    scss: "folder-sass",
    tv: "folder-television",
    television: "folder-television",
    desktop: "folder-desktop",
    display: "folder-desktop",
    console: "folder-console",
    images: "folder-images",
    image: "folder-images",
    imgs: "folder-images",
    img: "folder-images",
    icons: "folder-images",
    icon: "folder-images",
    icos: "folder-images",
    ico: "folder-images",
    figures: "folder-images",
    figure: "folder-images",
    figs: "folder-images",
    fig: "folder-images",
    screenshot: "folder-images",
    screenshots: "folder-images",
    screengrab: "folder-images",
    screengrabs: "folder-images",
    pic: "folder-images",
    pics: "folder-images",
    picture: "folder-images",
    pictures: "folder-images",
    photo: "folder-images",
    photos: "folder-images",
    photograph: "folder-images",
    photographs: "folder-images",
    script: "folder-scripts",
    scripts: "folder-scripts",
    scripting: "folder-scripts",
    node: "folder-node",
    nodejs: "folder-node",
    node_modules: "folder-node",
    js: "folder-javascript",
    javascript: "folder-javascript",
    javascripts: "folder-javascript",
    json: "folder-json",
    jsons: "folder-json",
    font: "folder-font",
    fonts: "folder-font",
    bower_components: "folder-bower",
    test: "folder-test",
    tests: "folder-test",
    testing: "folder-test",
    snapshots: "folder-test",
    spec: "folder-test",
    specs: "folder-test",
    directive: "folder-directive",
    directives: "folder-vue-directives",
    jinja: "folder-jinja",
    jinja2: "folder-jinja",
    j2: "folder-jinja",
    markdown: "folder-markdown",
    md: "folder-markdown",
    "pdm-plugins": "folder-pdm",
    "pdm-build": "folder-pdm",
    php: "folder-php",
    phpmailer: "folder-phpmailer",
    sublime: "folder-sublime",
    doc: "folder-docs",
    docs: "folder-docs",
    document: "folder-docs",
    documents: "folder-docs",
    documentation: "folder-docs",
    post: "folder-docs",
    posts: "folder-docs",
    article: "folder-docs",
    articles: "folder-docs",
    wiki: "folder-docs",
    news: "folder-docs",
    "github/workflows": "folder-gh-workflows",
    git: "folder-git",
    patches: "folder-git",
    githooks: "folder-git",
    submodules: "folder-git",
    github: "folder-github",
    gitea: "folder-gitea",
    gitlab: "folder-gitlab",
    forgejo: "folder-forgejo",
    vscode: "folder-vscode",
    "vscode-test": "folder-vscode",
    view: "folder-views",
    views: "folder-views",
    screen: "folder-views",
    screens: "folder-views",
    page: "folder-views",
    pages: "folder-views",
    public_html: "folder-views",
    html: "folder-views",
    vue: "folder-vue",
    vuepress: "folder-vuepress",
    expo: "folder-expo",
    "expo-shared": "folder-expo",
    cfg: "folder-config",
    cfgs: "folder-config",
    conf: "folder-config",
    confs: "folder-config",
    config: "folder-config",
    configs: "folder-config",
    configuration: "folder-config",
    configurations: "folder-config",
    setting: "folder-config",
    settings: "folder-config",
    "META-INF": "folder-config",
    option: "folder-config",
    options: "folder-config",
    pref: "folder-config",
    prefs: "folder-config",
    preference: "folder-config",
    preferences: "folder-config",
    i18n: "folder-i18n",
    internationalization: "folder-i18n",
    lang: "folder-i18n",
    langs: "folder-i18n",
    language: "folder-i18n",
    languages: "folder-i18n",
    locale: "folder-i18n",
    locales: "folder-i18n",
    l10n: "folder-i18n",
    localization: "folder-i18n",
    translation: "folder-i18n",
    translate: "folder-i18n",
    translations: "folder-i18n",
    tx: "folder-i18n",
    components: "folder-vue",
    widget: "folder-components",
    widgets: "folder-components",
    fragments: "folder-components",
    verdaccio: "folder-verdaccio",
    aurelia_project: "folder-aurelia",
    resource: "folder-resource",
    resources: "folder-resource",
    res: "folder-resource",
    asset: "folder-resource",
    assets: "folder-resource",
    static: "folder-resource",
    report: "folder-resource",
    reports: "folder-resource",
    lib: "folder-lib",
    libs: "folder-lib",
    library: "folder-lib",
    libraries: "folder-lib",
    vendor: "folder-lib",
    vendors: "folder-lib",
    "third-party": "folder-lib",
    lib64: "folder-lib",
    themes: "folder-theme",
    theme: "folder-theme",
    color: "folder-theme",
    colors: "folder-theme",
    design: "folder-theme",
    designs: "folder-theme",
    palette: "folder-theme",
    palettes: "folder-theme",
    webpack: "folder-webpack",
    global: "folder-global",
    public: "folder-public",
    www: "folder-public",
    wwwroot: "folder-public",
    web: "folder-public",
    website: "folder-public",
    websites: "folder-public",
    site: "folder-public",
    browser: "folder-public",
    browsers: "folder-public",
    inc: "folder-include",
    include: "folder-include",
    includes: "folder-include",
    partial: "folder-include",
    partials: "folder-include",
    inc64: "folder-include",
    docker: "folder-docker",
    dockerfiles: "folder-docker",
    dockerhub: "folder-docker",
    store: "folder-store",
    effects: "folder-ngrx-effects",
    states: "folder-ngrx-state",
    state: "folder-ngrx-state",
    reducers: "folder-redux-reducer",
    reducer: "folder-redux-reducer",
    actions: "folder-redux-actions",
    entities: "folder-ngrx-entities",
    selectors: "folder-redux-selector",
    selector: "folder-redux-selector",
    stores: "folder-store",
    react: "folder-react-components",
    jsx: "folder-react-components",
    reactjs: "folder-react-components",
    "react-components": "folder-react-components",
    astro: "folder-astro",
    db: "folder-database",
    data: "folder-database",
    database: "folder-database",
    databases: "folder-database",
    sql: "folder-database",
    log: "folder-log",
    logs: "folder-log",
    logging: "folder-log",
    target: "folder-target",
    temp: "folder-temp",
    tmp: "folder-temp",
    cached: "folder-temp",
    cache: "folder-temp",
    aws: "folder-aws",
    azure: "folder-aws",
    gcp: "folder-aws",
    aud: "folder-audio",
    auds: "folder-audio",
    audio: "folder-audio",
    audios: "folder-audio",
    music: "folder-audio",
    song: "folder-audio",
    songs: "folder-audio",
    sound: "folder-audio",
    sounds: "folder-audio",
    voice: "folder-audio",
    voices: "folder-audio",
    recordings: "folder-audio",
    vid: "folder-video",
    vids: "folder-video",
    video: "folder-video",
    videos: "folder-video",
    movie: "folder-video",
    movies: "folder-video",
    media: "folder-video",
    kubernetes: "folder-kubernetes",
    k8s: "folder-kubernetes",
    import: "folder-import",
    imports: "folder-import",
    imported: "folder-import",
    export: "folder-export",
    exports: "folder-export",
    exported: "folder-export",
    wakatime: "folder-wakatime",
    circleci: "folder-circleci",
    "wordpress-org": "folder-wordpress",
    "wp-content": "folder-wordpress",
    gradle: "folder-gradle",
    coverage: "folder-coverage",
    "nyc-output": "folder-coverage",
    nyc_output: "folder-coverage",
    e2e: "folder-coverage",
    it: "folder-coverage",
    "integration-test": "folder-coverage",
    "integration-tests": "folder-coverage",
    class: "folder-class",
    classes: "folder-class",
    model: "folder-class",
    models: "folder-class",
    schemas: "folder-class",
    schema: "folder-class",
    other: "folder-other",
    others: "folder-other",
    misc: "folder-other",
    miscellaneous: "folder-other",
    extra: "folder-other",
    extras: "folder-other",
    etc: "folder-other",
    lua: "folder-lua",
    turbo: "folder-turborepo",
    typescript: "folder-typescript",
    ts: "folder-typescript",
    typings: "folder-typescript",
    "@types": "folder-typescript",
    types: "folder-typescript",
    graphql: "folder-graphql",
    gql: "folder-graphql",
    routes: "folder-routes",
    router: "folder-routes",
    routers: "folder-routes",
    navigation: "folder-routes",
    navigations: "folder-routes",
    routing: "folder-routes",
    ci: "folder-ci",
    benchmark: "folder-benchmark",
    benchmarks: "folder-benchmark",
    bench: "folder-benchmark",
    performance: "folder-benchmark",
    perf: "folder-benchmark",
    profiling: "folder-benchmark",
    measure: "folder-benchmark",
    measures: "folder-benchmark",
    measurement: "folder-benchmark",
    messages: "folder-messages",
    messaging: "folder-messages",
    forum: "folder-messages",
    chat: "folder-messages",
    chats: "folder-messages",
    conversation: "folder-messages",
    conversations: "folder-messages",
    dialog: "folder-messages",
    dialogs: "folder-messages",
    less: "folder-less",
    gulp: "folder-gulp",
    "gulp-tasks": "folder-gulp",
    "gulpfile.js": "folder-gulp",
    "gulpfile.mjs": "folder-gulp",
    "gulpfile.ts": "folder-gulp",
    "gulpfile.babel.js": "folder-gulp",
    python: "folder-python",
    pycache: "folder-python",
    pytest_cache: "folder-python",
    sandbox: "folder-sandbox",
    sandboxes: "folder-sandbox",
    playground: "folder-sandbox",
    playgrounds: "folder-sandbox",
    scons: "folder-scons",
    sconf_temp: "folder-scons",
    scons_cache: "folder-scons",
    mojo: "folder-mojo",
    moon: "folder-moon",
    debug: "folder-debug",
    debugger: "folder-debug",
    debugging: "folder-debug",
    fastlane: "folder-fastlane",
    plugin: "folder-plugin",
    plugins: "folder-plugin",
    mod: "folder-plugin",
    mods: "folder-plugin",
    modding: "folder-plugin",
    extension: "folder-plugin",
    extensions: "folder-plugin",
    addon: "folder-plugin",
    addons: "folder-plugin",
    addin: "folder-plugin",
    addins: "folder-plugin",
    module: "folder-plugin",
    modules: "folder-plugin",
    middleware: "folder-middleware",
    middlewares: "folder-middleware",
    controller: "folder-controller",
    controllers: "folder-controller",
    controls: "folder-controller",
    service: "folder-controller",
    services: "folder-controller",
    provider: "folder-controller",
    providers: "folder-controller",
    handler: "folder-controller",
    handlers: "folder-controller",
    ansible: "folder-ansible",
    server: "folder-server",
    servers: "folder-server",
    backend: "folder-server",
    backends: "folder-server",
    client: "folder-client",
    clients: "folder-client",
    frontend: "folder-client",
    frontends: "folder-client",
    pwa: "folder-client",
    spa: "folder-client",
    tasks: "folder-tasks",
    tickets: "folder-tasks",
    android: "folder-android",
    ios: "folder-ios",
    presentation: "folder-ui",
    gui: "folder-ui",
    ui: "folder-ui",
    ux: "folder-ui",
    uploads: "folder-upload",
    upload: "folder-upload",
    downloads: "folder-download",
    download: "folder-download",
    downloader: "folder-download",
    downloaders: "folder-download",
    tools: "folder-tools",
    toolkit: "folder-tools",
    toolkits: "folder-tools",
    toolbox: "folder-tools",
    toolboxes: "folder-tools",
    tooling: "folder-tools",
    devtools: "folder-tools",
    kit: "folder-tools",
    kits: "folder-tools",
    helpers: "folder-helper",
    helper: "folder-helper",
    serverless: "folder-serverless",
    api: "folder-api",
    apis: "folder-api",
    restapi: "folder-api",
    app: "folder-app",
    apps: "folder-app",
    application: "folder-app",
    applications: "folder-app",
    apollo: "folder-apollo",
    "apollo-client": "folder-apollo",
    "apollo-cache": "folder-apollo",
    "apollo-config": "folder-apollo",
    arc: "folder-archive",
    arcs: "folder-archive",
    archive: "folder-archive",
    archives: "folder-archive",
    archival: "folder-archive",
    bkp: "folder-backup",
    bkps: "folder-backup",
    bak: "folder-backup",
    baks: "folder-backup",
    backup: "folder-backup",
    backups: "folder-backup",
    "back-up": "folder-backup",
    "back-ups": "folder-backup",
    history: "folder-backup",
    histories: "folder-backup",
    batch: "folder-batch",
    batchs: "folder-batch",
    batches: "folder-batch",
    buildkite: "folder-buildkite",
    cluster: "folder-cluster",
    clusters: "folder-cluster",
    command: "folder-command",
    commands: "folder-command",
    commandline: "folder-command",
    cmd: "folder-command",
    cli: "folder-command",
    clis: "folder-command",
    constant: "folder-constant",
    constants: "folder-constant",
    const: "folder-constant",
    consts: "folder-constant",
    container: "folder-container",
    containers: "folder-container",
    devcontainer: "folder-container",
    content: "folder-content",
    contents: "folder-content",
    context: "folder-context",
    contexts: "folder-context",
    core: "folder-core",
    delta: "folder-delta",
    deltas: "folder-delta",
    changes: "folder-delta",
    dump: "folder-dump",
    dumps: "folder-dump",
    demo: "folder-examples",
    demos: "folder-examples",
    example: "folder-examples",
    examples: "folder-examples",
    sample: "folder-examples",
    samples: "folder-examples",
    "sample-data": "folder-examples",
    env: "folder-environment",
    envs: "folder-environment",
    environment: "folder-environment",
    environments: "folder-environment",
    venv: "folder-environment",
    func: "folder-functions",
    funcs: "folder-functions",
    function: "folder-functions",
    functions: "folder-functions",
    lambda: "folder-functions",
    lambdas: "folder-functions",
    logic: "folder-functions",
    math: "folder-functions",
    maths: "folder-functions",
    calc: "folder-functions",
    calcs: "folder-functions",
    calculation: "folder-functions",
    calculations: "folder-functions",
    generator: "folder-generator",
    generators: "folder-generator",
    generated: "folder-generator",
    "cfn-gen": "folder-generator",
    gen: "folder-generator",
    gens: "folder-generator",
    auto: "folder-generator",
    hook: "folder-hook",
    hooks: "folder-hook",
    trigger: "folder-trigger",
    triggers: "folder-trigger",
    job: "folder-job",
    jobs: "folder-job",
    key: "folder-keys",
    keys: "folder-keys",
    token: "folder-keys",
    tokens: "folder-keys",
    jwt: "folder-keys",
    secret: "folder-keys",
    secrets: "folder-keys",
    layout: "folder-layout",
    layouts: "folder-layout",
    mail: "folder-mail",
    mails: "folder-mail",
    email: "folder-mail",
    emails: "folder-mail",
    smtp: "folder-mail",
    mailers: "folder-mail",
    mappings: "folder-mappings",
    mapping: "folder-mappings",
    meta: "folder-meta",
    changesets: "folder-changesets",
    changeset: "folder-changesets",
    package: "folder-packages",
    packages: "folder-packages",
    pkg: "folder-packages",
    pkgs: "folder-packages",
    serverpackages: "folder-packages",
    devpackages: "folder-packages",
    dependencies: "folder-packages",
    shared: "folder-shared",
    common: "folder-shared",
    glsl: "folder-shader",
    hlsl: "folder-shader",
    shader: "folder-shader",
    shaders: "folder-shader",
    stack: "folder-stack",
    stacks: "folder-stack",
    template: "folder-template",
    templates: "folder-template",
    "github/ISSUE_TEMPLATE": "folder-template",
    "github/PULL_REQUEST_TEMPLATE": "folder-template",
    util: "folder-utils",
    utils: "folder-utils",
    utility: "folder-utils",
    utilities: "folder-utils",
    supabase: "folder-supabase",
    private: "folder-private",
    linux: "folder-linux",
    linuxbsd: "folder-linux",
    unix: "folder-linux",
    windows: "folder-windows",
    win: "folder-windows",
    win32: "folder-windows",
    macos: "folder-macos",
    mac: "folder-macos",
    osx: "folder-macos",
    DS_Store: "folder-macos",
    iPhone: "folder-macos",
    iPad: "folder-macos",
    iPod: "folder-macos",
    macbook: "folder-macos",
    "macbook-air": "folder-macos",
    macosx: "folder-macos",
    apple: "folder-macos",
    error: "folder-error",
    errors: "folder-error",
    err: "folder-error",
    errs: "folder-error",
    crash: "folder-error",
    crashes: "folder-error",
    event: "folder-event",
    events: "folder-event",
    auth: "folder-secure",
    authentication: "folder-secure",
    secure: "folder-secure",
    security: "folder-secure",
    cert: "folder-secure",
    certs: "folder-secure",
    certificate: "folder-secure",
    certificates: "folder-secure",
    ssl: "folder-secure",
    cipher: "folder-secure",
    cypher: "folder-secure",
    tls: "folder-secure",
    custom: "folder-custom",
    customs: "folder-custom",
    draft: "folder-mock",
    drafts: "folder-mock",
    mock: "folder-mock",
    mocks: "folder-mock",
    fixture: "folder-mock",
    fixtures: "folder-mock",
    concept: "folder-mock",
    concepts: "folder-mock",
    sketch: "folder-mock",
    sketches: "folder-mock",
    syntax: "folder-syntax",
    syntaxes: "folder-syntax",
    spellcheck: "folder-syntax",
    spellcheckers: "folder-syntax",
    vm: "folder-vm",
    vms: "folder-vm",
    stylus: "folder-stylus",
    "flow-typed": "folder-flow",
    rule: "folder-rules",
    rules: "folder-rules",
    validation: "folder-rules",
    validations: "folder-rules",
    validator: "folder-rules",
    validators: "folder-rules",
    review: "folder-review",
    reviews: "folder-review",
    revisal: "folder-review",
    revisals: "folder-review",
    reviewed: "folder-review",
    preview: "folder-review",
    previews: "folder-review",
    anim: "folder-animation",
    anims: "folder-animation",
    animation: "folder-animation",
    animations: "folder-animation",
    animated: "folder-animation",
    motion: "folder-animation",
    motions: "folder-animation",
    transition: "folder-animation",
    transitions: "folder-animation",
    easing: "folder-animation",
    easings: "folder-animation",
    guard: "folder-guard",
    guards: "folder-guard",
    prisma: "folder-prisma",
    "prisma/schema": "folder-prisma",
    pipe: "folder-pipe",
    pipes: "folder-pipe",
    pipeline: "folder-pipe",
    pipelines: "folder-pipe",
    svg: "folder-svg",
    svgs: "folder-svg",
    nuxt: "folder-nuxt",
    terraform: "folder-terraform",
    mobile: "folder-mobile",
    mobiles: "folder-mobile",
    portable: "folder-mobile",
    portability: "folder-mobile",
    phone: "folder-mobile",
    phones: "folder-mobile",
    stencil: "folder-stencil",
    firebase: "folder-firebase",
    firestore: "folder-firestore",
    "cloud-firestore": "folder-firestore",
    "firebase-firestore": "folder-firestore",
    "cloud-functions": "folder-cloud-functions",
    cloudfunctions: "folder-cloud-functions",
    "firebase-cloud-functions": "folder-cloud-functions",
    "firebase-cloudfunctions": "folder-cloud-functions",
    svelte: "folder-svelte",
    "svelte-kit": "folder-svelte",
    update: "folder-update",
    updates: "folder-update",
    upgrade: "folder-update",
    upgrades: "folder-update",
    idea: "folder-intellij",
    "azure-pipelines": "folder-azure-pipelines",
    "azure-pipelines-ci": "folder-azure-pipelines",
    mjml: "folder-mjml",
    admin: "folder-admin",
    admins: "folder-admin",
    manager: "folder-admin",
    managers: "folder-admin",
    moderator: "folder-admin",
    moderators: "folder-admin",
    jupyter: "folder-jupyter",
    notebook: "folder-jupyter",
    notebooks: "folder-jupyter",
    ipynb: "folder-jupyter",
    scala: "folder-scala",
    connection: "folder-connection",
    connections: "folder-connection",
    integration: "folder-connection",
    integrations: "folder-connection",
    remote: "folder-connection",
    remotes: "folder-connection",
    quasar: "folder-quasar",
    next: "folder-next",
    cobol: "folder-cobol",
    yarn: "folder-yarn",
    husky: "folder-husky",
    storybook: "folder-storybook",
    stories: "folder-storybook",
    base: "folder-base",
    bases: "folder-base",
    cart: "folder-cart",
    "shopping-cart": "folder-cart",
    shopping: "folder-cart",
    shop: "folder-cart",
    home: "folder-home",
    start: "folder-home",
    main: "folder-home",
    landing: "folder-home",
    project: "folder-project",
    projects: "folder-project",
    interface: "folder-interface",
    interfaces: "folder-interface",
    netlify: "folder-netlify",
    enum: "folder-enum",
    enums: "folder-enum",
    pact: "folder-contract",
    pacts: "folder-contract",
    contract: "folder-contract",
    contracts: "folder-contract",
    "contract-testing": "folder-contract",
    "contract-test": "folder-contract",
    "contract-tests": "folder-contract",
    helm: "folder-helm",
    helmchart: "folder-helm",
    helmcharts: "folder-helm",
    queue: "folder-queue",
    queues: "folder-queue",
    bull: "folder-queue",
    mq: "folder-queue",
    vercel: "folder-vercel",
    now: "folder-vercel",
    cypress: "folder-cypress",
    decorator: "folder-decorators",
    decorators: "folder-decorators",
    java: "folder-java",
    resolver: "folder-resolver",
    resolvers: "folder-resolver",
    angular: "folder-angular",
    unity: "folder-unity",
    pdf: "folder-pdf",
    pdfs: "folder-pdf",
    protobuf: "folder-proto",
    protobufs: "folder-proto",
    proto: "folder-proto",
    protos: "folder-proto",
    plastic: "folder-plastic",
    gamemaker: "folder-gamemaker",
    gamemaker2: "folder-gamemaker",
    hg: "folder-mercurial",
    hghooks: "folder-mercurial",
    hgext: "folder-mercurial",
    godot: "folder-godot",
    "godot-cpp": "folder-godot",
    lottie: "folder-lottie",
    lotties: "folder-lottie",
    lottiefiles: "folder-lottie",
    taskfile: "folder-taskfile",
    taskfiles: "folder-taskfile",
    drizzle: "folder-drizzle",
    cloudflare: "folder-cloudflare",
    seeds: "folder-seeders",
    seeders: "folder-seeders",
    seed: "folder-seeders",
    seeding: "folder-seeders",
    bicep: "folder-bicep",
    snap: "folder-snapcraft",
    snapcraft: "folder-snapcraft",
    dev: "folder-development",
    development: "folder-development",
    flutter: "folder-flutter",
    snippet: "folder-snippet",
    snippets: "folder-snippet",
    element: "folder-element",
    elements: "folder-element",
    "src-tauri": "folder-src-tauri",
    favicon: "folder-favicon",
    favicons: "folder-favicon",
    lefthook: "folder-lefthook",
    "lefthook-local": "folder-lefthook",
    bloc: "folder-bloc",
    cubit: "folder-bloc",
    blocs: "folder-bloc",
    cubits: "folder-bloc",
    powershell: "folder-powershell",
    ps: "folder-powershell",
    ps1: "folder-powershell",
    repository: "folder-repository",
    repositories: "folder-repository",
    repo: "folder-repository",
    repos: "folder-repository",
    luau: "folder-luau",
    obsidian: "folder-obsidian",
    trash: "folder-trash",
    cline_docs: "folder-cline",
    liquibase: "folder-liquibase",
    dart: "folder-dart",
    dart_tool: "folder-dart",
    dart_tools: "folder-dart",
    zeabur: "folder-zeabur",
    kusto: "folder-kusto",
    kql: "folder-kusto",
    policy: "folder-policy",
    policies: "folder-policy",
    attachment: "folder-attachment",
    attachments: "folder-attachment",
    bibliography: "folder-bibliography",
    bibliographies: "folder-bibliography",
    book: "folder-bibliography",
    books: "folder-bibliography",
    link: "folder-link",
    links: "folder-link",
    pytorch: "folder-pytorch",
    torch: "folder-pytorch",
  },
  languages: {
    git: "git",
    "git-commit": "git",
    "git-rebase": "git",
    ignore: "git",
    "github-actions-workflow": "github-actions-workflow",
    yaml: "yaml",
    "spring-boot-properties-yaml": "yaml",
    ansible: "yaml",
    "ansible-jinja": "yaml",
    xml: "xml",
    xquery: "xml",
    xsl: "xml",
    matlab: "matlab",
    makefile: "settings",
    ini: "settings",
    properties: "settings",
    "spring-boot-properties": "settings",
    toml: "toml",
    diff: "diff",
    json: "json",
    jsonc: "json",
    json5: "json",
    blink: "blink",
    java: "java",
    razor: "razor",
    aspnetcorerazor: "razor",
    python: "python",
    mojo: "mojo",
    javascript: "javascript",
    typescript: "typescript",
    ets: "typescript",
    scala: "scala",
    handlebars: "handlebars",
    perl: "perl",
    perl6: "perl",
    haxe: "haxe",
    hxml: "haxe",
    puppet: "puppet",
    elixir: "elixir",
    livescript: "livescript",
    erlang: "erlang",
    twig: "twig",
    julia: "julia",
    elm: "elm",
    purescript: "purescript",
    stylus: "stylus",
    nunjucks: "nunjucks",
    pug: "pug",
    robotframework: "robot",
    sass: "sass",
    scss: "sass",
    less: "less",
    css: "css",
    testOutput: "visualstudio",
    vb: "visualstudio",
    "ng-template": "angular",
    graphql: "graphql",
    solidity: "solidity",
    autoit: "autoit",
    haml: "haml",
    yang: "yang",
    terraform: "terraform",
    applescript: "applescript",
    cake: "cake",
    cucumber: "cucumber",
    nim: "nim",
    nimble: "nim",
    apiblueprint: "apiblueprint",
    riot: "riot",
    postcss: "postcss",
    "lang-cfml": "coldfusion",
    haskell: "haskell",
    dhall: "dhall",
    cabal: "cabal",
    nix: "nix",
    ruby: "ruby",
    slim: "slim",
    php: "php",
    hack: "hack",
    javascriptreact: "react",
    mjml: "mjml",
    processing: "processing",
    hcl: "hcl",
    go: "go",
    "django-html": "django",
    "django-txt": "django",
    html: "html",
    gdscript: "godot",
    gdresource: "godot-assets",
    gdshader: "godot-assets",
    viml: "vim",
    prolog: "prolog",
    pawn: "pawn",
    reason: "reason",
    reason_lisp: "reason",
    sml: "sml",
    tex: "tex",
    latex: "latex",
    "latex-expl3": "latex",
    doctex: "doctex",
    apex: "salesforce",
    sas: "sas",
    dockerfile: "docker",
    dockercompose: "docker",
    dockerbake: "docker",
    csv: "table",
    tsv: "table",
    psv: "table",
    csharp: "csharp",
    bat: "console",
    awk: "console",
    shellscript: "console",
    c: "c",
    cpp: "cpp",
    "objective-c": "objective-c",
    "objective-cpp": "objective-cpp",
    c3: "c3",
    coffeescript: "coffee",
    fsharp: "fsharp",
    editorconfig: "editorconfig",
    clojure: "clojure",
    groovy: "groovy",
    markdoc: "markdoc",
    markdown: "markdown",
    jinja: "jinja",
    proto: "proto",
    "pip-requirements": "python-misc",
    vue: "vue",
    "vue-postcss": "vue",
    "vue-html": "vue",
    lua: "lua",
    bibtex: "bibliography",
    "bibtex-style": "bibtex-style",
    log: "log",
    jupyter: "jupyter",
    plaintext: "document",
    pdf: "pdf",
    powershell: "powershell",
    jade: "pug",
    r: "r",
    rsweave: "r",
    rust: "rust",
    sql: "database",
    kql: "kusto",
    ssh_config: "lock",
    svg: "svg",
    swift: "swift",
    typescriptreact: "react_ts",
    "search-result": "search",
    mcfunction: "minecraft",
    rescript: "rescript",
    otne: "otne",
    twee3: "twine",
    "twee3-harlowe-3": "twine",
    "twee3-chapbook-1": "twine",
    "twee3-sugarcube-2": "twine",
    grain: "grain",
    lolcode: "lolcode",
    idris: "idris",
    pgn: "chess",
    gemini: "gemini",
    "text-gemini": "gemini",
    v: "vlang",
    wolfram: "wolframlanguage",
    shaderlab: "shader",
    hlsl: "shader",
    glsl: "shader",
    wgsl: "shader",
    tree: "tree",
    svelte: "svelte",
    dart: "dart",
    cadence: "cadence",
    stylable: "stylable",
    hjson: "hjson",
    huff: "huff",
    cds: "cds",
    capnb: "cds",
    "cds-markdown-injection": "cds",
    "concourse-pipeline-yaml": "concourse",
    "concourse-task-yaml": "concourse",
    "systemd-conf": "systemd",
    "systemd-unit-file": "systemd",
    slint: "slint",
    luau: "luau",
    hosts: "hosts",
    beancount: "beancount",
    ahk2: "ahk2",
    gnuplot: "gnuplot",
  },
};
